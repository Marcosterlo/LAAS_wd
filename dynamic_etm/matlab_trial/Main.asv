clearvars
clc

%% Parameters
g = 9.81; % grav coeff
m = 0.15; % mass
l = 0.5; % length
mu = 0.05; % frict coeff
dt = 0.02; % sampling period

%% System definition: x^+1 = A*x + B*u

% Matrix definition
sysP.A = [1,                dt;
          g/l*dt,     1 - mu/(m*l^2)*dt];
sysP.B = [0;
          dt/(m*l^2)];

% Size of state x
sysP.nx = size(sysP.A, 1);

% Size of input u
sysP.nu = 1;

% I have to create 2 variables holding the last state used to update the
% input and its time instant
sysP.last_x = zeros(sysP.nx, 1);
sysP.last_t = 0;

%% Loading weights and biases of trained NN controller

load('sat_W3.mat')
W{1} = W1;
W{2} = W2;
W{3} = W3;
b{1} = b1;
b{2} = b2;
b{3} = b3;

% Number of layers
nlayer = numel(W) - 1;
sysN.nlayer = nlayer;

% I create a system in an analogous way for the system representing the
% trained NN
n = zeros(1, nlayer+1);
for i = 1:nlayer+1
    n(i) = size(W{i},1);
    sysN.W{i} = W{i};
    sysN.b{i} = b{i};
end
sysN.n = n;

%% Simulation

x0 = [1, 0];
nstep = 200;

[x, u] = system_simulation(sysP, sysN, x0, nstep);

figure(1)
t = 0:200;
plot(x,t ..)
